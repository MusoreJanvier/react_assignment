{"version":3,"file":"static/js/809.668f2124.chunk.js","mappings":"mKAMA,MAsEA,EAtEe,KAEX,+BACE,+BACE,iBAAKA,UAAU,SAAQ,WACrB,iBAAKA,UAAU,eAAc,WAC3B,wBAAI,WACJ,2BACE,yBACE,SAAC,KAAO,CAACC,GAAI,IAAI,SAAC,YAEpB,yBACE,SAAC,KAAO,CAACA,GAAI,WAAW,SAAC,eAE3B,yBACE,SAAC,KAAO,CAACA,GAAI,gBAAgB,SAAC,oBAEhC,yBACE,SAAC,KAAO,CAACA,GAAI,iBAAiB,SAAC,qBAEjC,yBACE,SAAC,KAAQ,CAACA,GAAI,YAAY,SAAC,kBAE7B,yBACE,SAAC,KAAO,CAACA,GAAI,WAAW,SAAC,qBAI/B,iBAAKD,UAAU,SAAQ,WACrB,wBAAI,kBACJ,2BACE,eAAIA,UAAU,WAAU,UACtB,cACEE,KAAK,4BACLC,OAAQ,SACRC,IAAI,aAAY,UAEhB,SAAC,MAAW,SAGhB,eAAIJ,UAAU,UAAS,UACrB,cACEE,KAAK,2BACLC,OAAQ,SACRC,IAAI,aAAY,UAEhB,SAAC,MAAS,SAGd,eAAIJ,UAAU,YAAW,UACvB,cACEE,KAAK,6BACLC,OAAQ,SACRC,IAAI,aAAY,UAEhB,SAAC,MAAW,kBAMtB,iBAAKJ,UAAU,gBAAe,UAAC,oBAE1B,IAAIK,MAAOC,qB,qJC1DxB,MAsFA,EAtFsB,KACpB,MAAOC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,KAC5CC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,GAEzCG,GAAWC,EAAAA,EAAAA,OACX,QAAEC,IAAYC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,QAajDC,EAAAA,EAAAA,YAAU,KAXUC,WAClB,IACEP,GAASQ,EAAAA,EAAAA,KAAW,IACpB,MAAMC,QAAaC,EAAAA,EAAAA,GAAW,mCAAkCZ,EAAc,aAC9EE,GAASQ,EAAAA,EAAAA,KAAW,IACpBZ,EAAiBa,EAGnB,CAFE,MAAOE,GACPC,QAAQD,MAAM,gCAAiCA,EACjD,GAIAE,EAAa,GACZ,CAACf,IAEJ,MAAMgB,EAAaC,KAAKC,KAAKrB,EAAcsB,OAnBd,GAmCvBC,EAAyBvB,EAAcwB,MAnChB,GAoC1BrB,EAAc,GApCY,EAqC3BA,GAGF,OACE,iCACE,SAACsB,EAAA,EAAM,IACNlB,GACC,SAACmB,EAAA,EAAO,KAER,qBAASjC,UAAU,0BAAyB,WAC1C,eAAIA,UAAU,eAAc,SAAC,uBAE5BO,EAAcsB,OAAS,GACtB,iBAAK7B,UAAU,gBAAe,WAC5B,8BACE,4BACE,2BACE,wBAAI,UACJ,wBAAI,aACJ,wBAAI,UACJ,wBAAI,eAGR,2BACG8B,EAAuBI,KAAI,CAACC,EAAKC,KAChC,2BACE,wBA/DS,GA+DH1B,EAAc,GAA4B0B,EAAI,KACpD,wBAAQ,OAAHD,QAAG,IAAHA,OAAG,EAAHA,EAAKE,WACV,wBAAQ,OAAHF,QAAG,IAAHA,OAAG,EAAHA,EAAKG,UAAUC,MAAM,KAAK,MAC/B,wBAAQ,OAAHJ,QAAG,IAAHA,OAAG,EAAHA,EAAKG,UAAUC,MAAM,KAAK,GAAGA,MAAM,KAAK,OAJnC,OAAHJ,QAAG,IAAHA,OAAG,EAAHA,EAAKK,aASpB,gBAAKxC,UAAU,aAAY,SA9Cd,MACvB,MAAMyC,EAAQ,GACd,IAAK,IAAIL,EAAI,EAAGA,GAAKV,EAAYU,IAC/BK,EAAMC,MACJ,mBAAgBC,QAAS,KAP7BhC,EAOoDyB,EAAG,WAAEA,GAAxCA,IAGjB,OAAOK,CAAK,EAuC2BG,SAG/B,SAACC,EAAA,EAAK,QAIZ,SAACC,EAAA,EAAM,MACN,C","sources":["components/Footer.jsx","pages/Notifications.jsx"],"sourcesContent":["import React from \"react\";\nimport \"../styles/footer.css\";\nimport { FaFacebookF, FaYoutube, FaInstagram } from \"react-icons/fa\";\nimport { HashLink } from \"react-router-hash-link\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Footer = () => {\n  return (\n    <>\n      <footer>\n        <div className=\"footer\">\n          <div className=\"footer-links\">\n            <h3>Links</h3>\n            <ul>\n              <li>\n                <NavLink to={\"/\"}>Home</NavLink>\n              </li>\n              <li>\n                <NavLink to={\"/doctors\"}>Doctors</NavLink>\n              </li>\n              <li>\n                <NavLink to={\"/appointments\"}>Appointments</NavLink>\n              </li>\n              <li>\n                <NavLink to={\"/notifications\"}>Notifications</NavLink>\n              </li>\n              <li>\n                <HashLink to={\"/#contact\"}>Contact Us</HashLink>\n              </li>\n              <li>\n                <NavLink to={\"/profile\"}>Profile</NavLink>\n              </li>\n            </ul>\n          </div>\n          <div className=\"social\">\n            <h3>Social links</h3>\n            <ul>\n              <li className=\"facebook\">\n                <a\n                  href=\"https://www.facebook.com/\"\n                  target={\"_blank\"}\n                  rel=\"noreferrer\"\n                >\n                  <FaFacebookF />\n                </a>\n              </li>\n              <li className=\"youtube\">\n                <a\n                  href=\"https://www.youtube.com/\"\n                  target={\"_blank\"}\n                  rel=\"noreferrer\"\n                >\n                  <FaYoutube />\n                </a>\n              </li>\n              <li className=\"instagram\">\n                <a\n                  href=\"https://www.instagram.com/\"\n                  target={\"_blank\"}\n                  rel=\"noreferrer\"\n                >\n                  <FaInstagram />\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"footer-bottom\">\n          Copy Right\n          Â© {new Date().getFullYear()}\n        </div>\n      </footer>\n    </>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"../styles/notification.css\";\nimport Empty from \"../components/Empty\";\nimport Footer from \"../components/Footer\";\nimport Navbar from \"../components/Navbar\";\nimport fetchData from \"../helper/apiCall\";\nimport { setLoading } from \"../redux/reducers/rootSlice\";\nimport Loading from \"../components/Loading\";\nimport \"../styles/user.css\";\n\nconst Notifications = () => {\n  const [notifications, setNotifications] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const notificationsPerPage = 8;\n  const dispatch = useDispatch();\n  const { loading } = useSelector((state) => state.root);\n\n  const getAllNotif = async () => {\n    try {\n      dispatch(setLoading(true));\n      const temp = await fetchData(`/notification/getallnotifs?page=${currentPage - 1}&limit=${notificationsPerPage}`);\n      dispatch(setLoading(false));\n      setNotifications(temp);\n    } catch (error) {\n      console.error(\"Error fetching notifications:\", error);\n    }\n  };\n\n  useEffect(() => {\n    getAllNotif();\n  }, [currentPage]);\n\n  const totalPages = Math.ceil(notifications.length / notificationsPerPage);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const renderPagination = () => {\n    const pages = [];\n    for (let i = 1; i <= totalPages; i++) {\n      pages.push(\n        <button key={i} onClick={() => handlePageChange(i)}>{i}</button>\n      );\n    }\n    return pages;\n  };\n\n  const paginatedNotifications = notifications.slice(\n    (currentPage - 1) * notificationsPerPage,\n    currentPage * notificationsPerPage\n  );\n\n  return (\n    <>\n      <Navbar />\n      {loading ? (\n        <Loading />\n      ) : (\n        <section className=\"container notif-section\">\n          <h2 className=\"page-heading\">Your Notifications</h2>\n\n          {notifications.length > 0 ? (\n            <div className=\"notifications\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>S.No</th>\n                    <th>Content</th>\n                    <th>Date</th>\n                    <th>Time</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {paginatedNotifications.map((ele, i) => (\n                    <tr key={ele?._id}>\n                      <td>{(currentPage - 1) * notificationsPerPage + i + 1}</td>\n                      <td>{ele?.content}</td>\n                      <td>{ele?.updatedAt.split(\"T\")[0]}</td>\n                      <td>{ele?.updatedAt.split(\"T\")[1].split(\".\")[0]}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <div className=\"pagination\">{renderPagination()}</div>\n            </div>\n          ) : (\n            <Empty />\n          )}\n        </section>\n      )}\n      <Footer />\n    </>\n  );\n};\n\nexport default Notifications;\n"],"names":["className","to","href","target","rel","Date","getFullYear","notifications","setNotifications","useState","currentPage","setCurrentPage","dispatch","useDispatch","loading","useSelector","state","root","useEffect","async","setLoading","temp","fetchData","error","console","getAllNotif","totalPages","Math","ceil","length","paginatedNotifications","slice","Navbar","Loading","map","ele","i","content","updatedAt","split","_id","pages","push","onClick","renderPagination","Empty","Footer"],"sourceRoot":""}